{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4cb61f9e_3bde6953",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 11,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2021-02-19T17:03:45Z",
      "side": 1,
      "message": "We don\u0027t have an easy way to define a query for identifying backend change, like we do for PolyGerrit checker:\n\n  (directory:\"polygerrit-ui\" OR file:WORKSPACE)\n  AND (branch:stable-2.16 OR branch:stable-3.1\n  OR branch:stable-3.2 OR branch:stable-3.3 OR branch:master)\n\nIf we had backend main directory, we could say:\n\n  (directory:\"backend\" OR file:WORKSPACE)\n\nthat way we would also avoid having alien checker added to PolyGerrit only changes.\n\nRight now we could still do this for Build/Tests checkers:\n\n  (directory:antlr3 OR\n  directory:java OR\n  directory:javatests OR\n  directory:lib OR\n  directory:modules OR\n  directory:plugins OR\n  directory:prolog OR\n  directory:prologtests OR\n  directory:proto OR\n  directory:tools OR\n  file:WORKSPACE OR\n  file:BUILD\n  AND (branch:stable-2.16 OR branch:stable-3.1\n  OR branch:stable-3.2 OR branch:stable-3.3 OR branch:master)\n\nIf I change only one single TypeScript file:\n\n  polygerrit-ui/app/elements/change/gr-change-view/gr-change-view.ts\n\nthen Build/Tests checker wouldn\u0027t be reported in the first place.",
      "revId": "32fc8cd74de9fb6e22a0e7876b183c0aa1229954",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "269c027b_4bfef3d4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 11,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-02-20T02:21:45Z",
      "side": 1,
      "message": "Yes, we could make the expression a lot more complicated, but it would then be subject to many more modifications moving forward.\n\nAlso, it would become very fragile as we add files/directories to the source tree.\n\nWe either accept this limitation OR just get rid of the Checkers auto-assignment logic and DO not assign any query string and leave to the pipeline to add the check as needed.\n\nAlso, the NOT_RELEVANT could be a workable workaround.\n\nAt the moment, it shows it as \"pending build\" which is very misleading.",
      "parentUuid": "4cb61f9e_3bde6953",
      "revId": "32fc8cd74de9fb6e22a0e7876b183c0aa1229954",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "91cede78_316a590d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 11,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2021-02-20T09:21:04Z",
      "side": 1,
      "message": "\u003e Yes, we could make the expression a lot more complicated, but it would then be subject to many more modifications moving forward.\n\n\nWhile the suggested query for detecting backend changes is more involved as for frontend changes, it\u0027s still manageable.\n \n\u003e Also, it would become very fragile as we add files/directories to the source tree.\n\nHave you actually examined my query? It\u0027s only referencing root directories. And we have not added any new directories/files in the gerrit root directory for years. Last time I changed the root directory structure was my major re-work ob Bazel package hierarchy in this \"flatten-directory-structure\" series: [1], that was done in October 2017. Nothing changed since then so that the above query would be static and wouldn\u0027t change for years (we would rather replace checks plugin with something completely  different before we apply yet another round of major overhaul of root directory structure in gerrit).\n\n\u003e We either accept this limitation [...]\n\nBut we do use the checker query approach already today for detecting PolyGerrit changes only, see my previous comment: \"(directory:\"polygerrit-ui\" OR file:WORKSPACE)\", and that\u0027s why you don\u0027t see \"PolyGerrit Build/Test\" checker reported on non frontend changes. So why re-invent the new approach, complicate the CI toolchain that is already quite complex, and not just use the checker query?\n\nAlso the major drawback in your suggestions: we would still preserve backend checker on frontend changes, with different status. With checker query based query approach, the checkers are not reported in the first place: in the same manner as for backend only changes.\n\nShould I apply the above query and upload test PolyGerrit only change to verify my suggested approach?\n\n[1] https://gerrit-review.googlesource.com/q/topic:flatten-directory-structure",
      "parentUuid": "269c027b_4bfef3d4",
      "revId": "32fc8cd74de9fb6e22a0e7876b183c0aa1229954",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3d26fc00_9125d961",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-02-19T15:36:45Z",
      "side": 1,
      "message": "Ping? Can we roll this out?",
      "revId": "32fc8cd74de9fb6e22a0e7876b183c0aa1229954",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}