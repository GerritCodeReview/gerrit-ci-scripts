- builder:
    name: merge-target-branch
    builders:
      - shell: |
          #!/bin/bash -e
          cd gerrit
          git fetch origin $TARGET_BRANCH
          git config user.name "Jenkins Build"
          git config user.email "jenkins@gerritforge.com"
          git merge --no-commit --no-edit --no-ff FETCH_HEAD

- builder:
    name: fetch-all-submodules
    builders:
      - shell: |
          #!/bin/bash -e
          set +x
          cd gerrit
          function fetch_submodules {
            # We do need to call update even if we know it will fail: the submodules git needs
            # to be initialised and made it pointing to the correct remote submodule URL
            git submodule update > /dev/null 2> /dev/null || true
            export SUBMODULES=$(git submodule status | awk '{print $2}')
            for module in $SUBMODULES
            do
              echo "Fetching all changes refs for $module ..."
              pushd $module > /dev/null
              git fetch -q origin +refs/changes/*:refs/changes/*
              popd > /dev/null
            done
          }
          git submodule init
          # Fetch submodules refs/changes as fallback action of a submodule update failure
          echo "Updating all submodules ..."
          git submodule update || ( fetch_submodules && git submodule update )

- defaults:
    name: verifier-defaults
    concurrent: true
    parameters:
      - string:
          name: CHANGE_URL
          description: 'Gerrit Change URL to build'
      - string:
          name: REFSPEC
          description: 'Git refspec to use for fetching changes'
      - string:
          name: BRANCH
          description: 'Git SHA1 of the path-set to verify'
      - string:
          name: TARGET_BRANCH
          description: 'Git target branch of the change'
      - choice:
          name: MODE
          choices:
            - reviewdb
            - notedb
            - polygerrit
          description: 'Type of verification to execute'
    properties:
      - authorization:
          anonymous:
            - job-discover
            - job-read
            - job-extended-read
      - build-discarder:
          days-to-keep: 7
    scm:
      - git:
          url: https://gerrit.googlesource.com/gerrit
          refspec: $REFSPEC
          branches:
            - $BRANCH
          submodule:
            disable: true
          skip-tag: true
          basedir: gerrit
    wrappers:
      - xvfb:
          installation-name: Xvfb
          display-name: 1
          parallel-build: false
          timeout: 60
          screen: 1024x768x16
          additional-options: -fbdir /tmp
          debug: true
          shutdown-with-build: false
      - raw:
          xml: |
            <hudson.plugins.build__timeout.BuildTimeoutWrapper plugin="build-timeout@1.16">
              <strategy class="hudson.plugins.build_timeout.impl.NoActivityTimeOutStrategy">
                 <timeoutSecondsString>750</timeoutSecondsString>
              </strategy>
              <operationList>
                 <hudson.plugins.build__timeout.operations.AbortOperation/>
              </operationList>
            </hudson.plugins.build__timeout.BuildTimeoutWrapper>
      - raw:
          xml: <jenkins.plugins.logstash.LogstashBuildWrapper plugin="logstash@1.2.0"/>
    builders:
      - merge-target-branch
      - fetch-all-submodules
      - shell: !include-raw-escape: gerrit-bazel-build.sh
      - shell: !include-raw-escape: gerrit-bazel-verifier-test.sh
      - shell: !include-raw-escape: gerrit-bazel-cat-test-log.sh
    publishers:
      - archive:
          artifacts: >
            gerrit/bazel-bin/*.war,gerrit/bazel-bin/plugins/*/*.jar,
            gerrit/bazel-bin/*api/*api.jar,
            gerrit/bazel-bin/gerrit-acceptance-framework/*.jar
          excludes: 'gerrit/bazel-bin/plugins/core*/**/*.jar'
      - groovy-postbuild:
          script: |
            (manager.logContains('timed out') || manager.logContains('TIMEOUT in ')) \
              ? manager.buildAborted() : false

- job:
    name: Gerrit-verifier-bazel
    description: 'Gerrit build of open change with Bazel'
    defaults: verifier-defaults
    node: bazel-debian

- job:
    name: Gerrit-verifier-bazel-java11
    description: "Gerrit build of open change with Bazel and Java11\n"
    defaults: verifier-defaults
    node: bazel-debian

    properties:
      - inject:
         properties-content: |
           BAZEL_OPTS=--host_javabase=@bazel_tools//tools/jdk:remote_jdk11 --javabase=@bazel_tools//tools/jdk:remote_jdk11 --host_java_toolchain=@bazel_tools//tools/jdk:toolchain_java11 --java_toolchain=@bazel_tools//tools/jdk:toolchain_java11

- job:
    name: Gerrit-codestyle
    description: 'Gerrit code-style checker for an open change'
    defaults: verifier-defaults
    node: bazel-debian
    builders:
      - merge-target-branch
      - fetch-all-submodules
      - shell: !include-raw-escape: gerrit-codestyle-gjf.sh
      - shell: !include-raw-escape: gerrit-codestyle-polygerrit-lint.sh
      - shell: !include-raw-escape: gerrit-codestyle-polygerrit-template.sh
      - shell: !include-raw-escape: gerrit-codestyle-buildifier.sh
    publishers:

- job:
    name: 'Gerrit-verifier-pipeline'
    description: Multi-branch pipeline to validate Gerrit
    project-type: multibranch
    node: master
    scm:
      - gerrit:
          url: https://gerrit-review.googlesource.com/a/gerrit
          credentials-id: gerrit-review.googlesource.com
          refspecs:
            - '+refs/heads/*:refs/remotes/@{remote}/*'
            - '+refs/changes/*:refs/remotes/@{remote}/*'
          property-strategies:
            all-branches:
              - suppress-scm-triggering: true
              - pipeline-branch-durability-override: max-survivability
