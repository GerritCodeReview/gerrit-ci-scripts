{
  "comments": [
    {
      "key": {
        "uuid": "51cf0c5b_f9661971",
        "filename": "jenkins-docker/slave-debian/Dockerfile",
        "patchSetId": 18
      },
      "lineNbr": 60,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-01-11T09:54:56Z",
      "side": 1,
      "message": "Why have you removed the pinning of the Chrome release? That would generate unexpected failures every time we rebuild the Docker image, which is exactly the problem we were trying to solve :-(",
      "range": {
        "startLine": 60,
        "startChar": 61,
        "endLine": 60,
        "endChar": 76
      },
      "revId": "77bc2e22c88bd3daa0541d7a1f0d0e735974f66f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "944a2967_e2c497be",
        "filename": "jenkins-docker/slave-debian/Dockerfile",
        "patchSetId": 18
      },
      "lineNbr": 60,
      "author": {
        "id": 1029953
      },
      "writtenOn": "2018-01-11T10:54:10Z",
      "side": 1,
      "message": "Because chrome was removing all old release (only had the latest release) so pining this would break building this if chrome was updated after we pinned it.\n\nI doint see chrome breaking a lot for us now, I am adding support for chrome headless in wct (basing it on wct-headless (made for ci))\n\nHeadless mode works for me and anyone that doesn’t have a display needs to use headless to.",
      "parentUuid": "51cf0c5b_f9661971",
      "range": {
        "startLine": 60,
        "startChar": 61,
        "endLine": 60,
        "endChar": 76
      },
      "revId": "77bc2e22c88bd3daa0541d7a1f0d0e735974f66f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d56d02e2_f2736163",
        "filename": "jenkins-docker/slave-debian/Dockerfile",
        "patchSetId": 18
      },
      "lineNbr": 60,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-01-15T14:53:50Z",
      "side": 1,
      "message": "Actually, the reason for this change is a broken Chrome :-) so my point was: as this is what this change is about to fix, we shouldn\u0027t fall into the same \"latest version\" trap again.\n\nOtherwise we may find ourselves in a few months time again in the same position as we are today, with the inability to rebuild the existing Docker image :-(",
      "parentUuid": "944a2967_e2c497be",
      "range": {
        "startLine": 60,
        "startChar": 61,
        "endLine": 60,
        "endChar": 76
      },
      "revId": "77bc2e22c88bd3daa0541d7a1f0d0e735974f66f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dec469d9_02d9bded",
        "filename": "jenkins-docker/slave-debian/Dockerfile",
        "patchSetId": 18
      },
      "lineNbr": 60,
      "author": {
        "id": 1029953
      },
      "writtenOn": "2018-01-15T14:55:48Z",
      "side": 1,
      "message": "Yep but there\u0027s no trust worthy sites that have the version we want to stay at and upgrade manually.",
      "parentUuid": "d56d02e2_f2736163",
      "range": {
        "startLine": 60,
        "startChar": 61,
        "endLine": 60,
        "endChar": 76
      },
      "revId": "77bc2e22c88bd3daa0541d7a1f0d0e735974f66f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39f9dd67_5614aff7",
        "filename": "jenkins-docker/slave-debian/Dockerfile",
        "patchSetId": 18
      },
      "lineNbr": 60,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-01-19T17:20:10Z",
      "side": 1,
      "message": "We download the current version (e.g. 63) from Google, which is trustworthy, archive the Deb file and then use it to build this Docker image consistently.",
      "parentUuid": "dec469d9_02d9bded",
      "range": {
        "startLine": 60,
        "startChar": 61,
        "endLine": 60,
        "endChar": 76
      },
      "revId": "77bc2e22c88bd3daa0541d7a1f0d0e735974f66f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf894067_e8b0753d",
        "filename": "jenkins-docker/slave-debian/Dockerfile",
        "patchSetId": 18
      },
      "lineNbr": 60,
      "author": {
        "id": 1029953
      },
      "writtenOn": "2018-01-19T17:22:48Z",
      "side": 1,
      "message": "Yep, question though can gerrit forge host this deb so that when we upgrade we can delete it and then re add the new version? It shoulden\u0027t use alot of storage like in the mb rage but then it would allow us to download from a trusted source and upgrade manually?",
      "parentUuid": "39f9dd67_5614aff7",
      "range": {
        "startLine": 60,
        "startChar": 61,
        "endLine": 60,
        "endChar": 76
      },
      "revId": "77bc2e22c88bd3daa0541d7a1f0d0e735974f66f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a64e217_f94ddcf0",
        "filename": "jenkins-docker/slave-debian/Dockerfile",
        "patchSetId": 18
      },
      "lineNbr": 60,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-01-24T07:54:28Z",
      "side": 1,
      "message": "I have a much better idea: why don\u0027t we create some \"base images\" on Dockerhub which contain the OS + Chrome version bundled?\n\nWe would then decouple the problem altogether and all the rebuild of the machines would never change the Chrome version anymore.",
      "parentUuid": "bf894067_e8b0753d",
      "range": {
        "startLine": 60,
        "startChar": 61,
        "endLine": 60,
        "endChar": 76
      },
      "revId": "77bc2e22c88bd3daa0541d7a1f0d0e735974f66f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b6378b41_4d25635c",
        "filename": "jenkins-docker/slave-debian/Dockerfile",
        "patchSetId": 18
      },
      "lineNbr": 60,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2018-01-24T08:02:13Z",
      "side": 1,
      "message": "According to Debian LTS schedule: https://wiki.debian.org/LTS:\n\n  Debian 9 “Stretch\" i386, amd64, armel and armhf (?) 2020 to June 2022\n\nSo that I expect that all chromium updates and dependent packages are going to be provided until June 2022. Wouldn\u0027t it be sufficient to always upgrade docker image during rebuild to the latest Chromium version and dependent libraries say until June 2021 (more then 3 years from now) and start to worry about compatibility and upgrade to newer debian versions (or another OSs like Alpine Linux or what not) starting from June 2021?",
      "parentUuid": "9a64e217_f94ddcf0",
      "range": {
        "startLine": 60,
        "startChar": 61,
        "endLine": 60,
        "endChar": 76
      },
      "revId": "77bc2e22c88bd3daa0541d7a1f0d0e735974f66f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82a3ea1a_c7e7dbd9",
        "filename": "jenkins-docker/slave-debian/Dockerfile",
        "patchSetId": 18
      },
      "lineNbr": 60,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-01-24T08:28:58Z",
      "side": 1,
      "message": "A successful upgrade doesn\u0027t mean a successful build :-(\nIf we always upgrade Chrome, we may break the tests because of crashes with the new release.\n\nBear in mind that our focus is NOT validating the stability of Chrome but only to check if our code works. Keeping \"everything else stable\" minimises the probability of a false positive.",
      "parentUuid": "b6378b41_4d25635c",
      "range": {
        "startLine": 60,
        "startChar": 61,
        "endLine": 60,
        "endChar": 76
      },
      "revId": "77bc2e22c88bd3daa0541d7a1f0d0e735974f66f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9438dc2_4e12589b",
        "filename": "jenkins-docker/slave-debian/Dockerfile",
        "patchSetId": 18
      },
      "lineNbr": 60,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2018-01-24T08:54:12Z",
      "side": 1,
      "message": "OTOH too outdated Chrome version is bad as well. Say we pin to Chrome 60 for the next years, and our user base will report breakages on Chrome 100, in year 2025. So I think there should be a compromise:\n\n* 1. we should be able to rebuild docker image without chrome upgrade\n* 2. once pre year (or even more often) we rebuild docker image with chrome upgrade + deps\n\nSo the question is can we define that we are at 2. now and create Stretch based image with Chrome upgrade option only, and will take care for scenario 1. above later? ;-)",
      "parentUuid": "82a3ea1a_c7e7dbd9",
      "range": {
        "startLine": 60,
        "startChar": 61,
        "endLine": 60,
        "endChar": 76
      },
      "revId": "77bc2e22c88bd3daa0541d7a1f0d0e735974f66f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b95a9d8_cf626e74",
        "filename": "jenkins-docker/slave-debian/Dockerfile",
        "patchSetId": 18
      },
      "lineNbr": 60,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-01-24T08:58:54Z",
      "side": 1,
      "message": "\u003e OTOH too outdated Chrome version is bad as well. Say we pin to Chrome 60 for the next years, and our user base will report breakages on Chrome 100, in year 2025. \n\nYeah, I agree that testing on Mosaic or Netscape Navigator would not make any sense anyway :-)\n\n\u003e So I think there should be a compromise:\n\u003e \n\u003e * 1. we should be able to rebuild docker image without chrome upgrade\n\n*That\u0027s exactly my point* : we should not *have to upgrade* Chrome every single time.\n\n\u003e * 2. once pre year (or even more often) we rebuild docker image with chrome upgrade + deps\n\n*Yep* or even ad-hoc as soon as new major features become available in Chrome. But it should be a conscious and revertible decision. \n\n\n\u003e So the question is can we define that we are at 2. now and create Stretch based image with Chrome upgrade option only, and will take care for scenario 1. above later? ;-)\n\nDebian 9 stretch + Chrome latest breaks our PolyGerrit tests. Paladox is working on fixing this but it isn\u0027t done AFAIK. It will work eventually, but we\u0027re not there yet.",
      "parentUuid": "c9438dc2_4e12589b",
      "range": {
        "startLine": 60,
        "startChar": 61,
        "endLine": 60,
        "endChar": 76
      },
      "revId": "77bc2e22c88bd3daa0541d7a1f0d0e735974f66f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}