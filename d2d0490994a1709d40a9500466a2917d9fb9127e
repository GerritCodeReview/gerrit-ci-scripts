{
  "comments": [
    {
      "key": {
        "uuid": "8c112171_e0c28407",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2020-04-02T06:34:53Z",
      "side": 1,
      "message": "Not sure I understand, how local Bazel cache should be reused, if pool of worker machines is used. The plan was to use Remote Bazel Cache: [1]. For that we would have to set-up Remote Cache on one machine, on the same GCP, where other worker machine are runnig, to optimize read and write cache operations. \n\nThen the pool of machines, would specific remote caceh, and all 50 machine will use that remote cache. This was never implemented, though. If we have remote cache, we can drop pre-warming cache steps in Docker image build (bazel build :release :api) and thus significantly reduce the Docker image size.\n\n* [1] https://docs.bazel.build/versions/master/remote-caching.html",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 44
      },
      "revId": "d2d0490994a1709d40a9500466a2917d9fb9127e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02c68e14_14c6f354",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-04-02T10:00:39Z",
      "side": 1,
      "message": "A shared cache for all workers would never work, because every worker has its own DOCKER_HOST variable and thus Bazel won\u0027t use the cache if that changes.\n\nA persistent cache *on the worker* would work because for that worker the DOCKER_HOST is the same and thus the cache will be reused.\n\nDoes that make sense?",
      "parentUuid": "8c112171_e0c28407",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 44
      },
      "revId": "d2d0490994a1709d40a9500466a2917d9fb9127e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7aaea0cd_9d0ddd6a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-04-02T13:22:01Z",
      "side": 1,
      "message": "@DavidO I believe there is a misunderstanding: the \u0027local\u0027 cache is not local to the docker container, because the volume is externally mounted. The storage is preserved and shared by all the containers that will run concurrently or later on.\n\nDoes now make more sense to you?",
      "parentUuid": "02c68e14_14c6f354",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 44
      },
      "revId": "d2d0490994a1709d40a9500466a2917d9fb9127e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "70cf18e5_6efb9a68",
        "filename": "jenkins/gerrit-verifier.yaml",
        "patchSetId": 2
      },
      "lineNbr": 114,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2020-04-02T10:29:55Z",
      "side": 1,
      "message": "Is the bazel cache in the docker images then used at all? If not, could we remove it?\nWe would have to adapt the Gerrit-bazel-{branch} jobs as well.",
      "revId": "d2d0490994a1709d40a9500466a2917d9fb9127e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "229a7aea_78155ff9",
        "filename": "jenkins/gerrit-verifier.yaml",
        "patchSetId": 2
      },
      "lineNbr": 114,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-04-02T10:35:30Z",
      "side": 1,
      "message": "\u003e Is the bazel cache in the docker images then used at all? If not, could we remove it?\n\nGood catch, yes, it will add the removal of that cache.\n\n\u003e We would have to adapt the Gerrit-bazel-{branch} jobs as well.\n\nIn theory yes, but in practice I would like to keep a point where we run the *whole* build and the *whole* tests once in a while. The merge to the target branch is a good candidate.\n\nAlso, if we see that something is breaking there and did not break the change validation, then it means we have some Bazel caching issue.\n\nNOTE: Some dependencies may disappear from the Internet and we could not notice them because of Bazel cache.",
      "parentUuid": "70cf18e5_6efb9a68",
      "revId": "d2d0490994a1709d40a9500466a2917d9fb9127e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d9783a0_5fa5306f",
        "filename": "jenkins/gerrit-verifier.yaml",
        "patchSetId": 2
      },
      "lineNbr": 114,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-04-02T10:46:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "229a7aea_78155ff9",
      "revId": "d2d0490994a1709d40a9500466a2917d9fb9127e",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}